#ifndef AVR_FHT_H
#define AVR_FHT_H

#include <Arduino.h>
#include <avr/pgmspace.h>

#define STRINGIFY_(a) #a
#define STRINGIFY(a) STRINGIFY_(a)

#if not defined(FHT_SAMPLES_N)
#define FHT_SAMPLES_N 256
#endif

#if FHT_SAMPLES_N == 256
#define LOG_N 8
#define _R_V 8 // reorder value - used for reorder list
#elif  FHT_SAMPLES_N == 128
#define LOG_N 7
  #define _R_V 8
#elif FHT_SAMPLES_N == 64
  #define LOG_N 6
  #define _R_V 4
#elif FHT_SAMPLES_N == 32
  #define LOG_N 5
  #define _R_V 4
#elif FHT_SAMPLES_N == 16
  #define LOG_N 4
  #define _R_V 2
#else
  #error SAMPLES_N value not defined
#endif

#define FHT_AMPLITUDES_N FHT_SAMPLES_N / 2

int __attribute__((used)) fht_input[(FHT_SAMPLES_N)]; // FHT input data buffer

// lookup values for cos and sin of 2(pi)k/N
extern const int16_t __attribute__((used)) _cas_constants[] PROGMEM = {
#if (FHT_SAMPLES_N ==  256)
    30274,12540,23170,23170,12540,30274,32138,6393,30274,12540,27246,18205,23170,23170,18205,27246,12540,30274,6393,32138,32610,3212,32138,6393,31357,9512,30274,12540,28899,15447,27246,18205,25330,20788,23170,23170,20788,25330,18205,27246,15447,28899,12540,30274,9512,31357,6393,32138,3212,32610,32729,1608,32610,3212,32413,4808,32138,6393,31786,7962,31357,9512,30853,11039,30274,12540,29622,14010,28899,15447,28106,16846,27246,18205,26320,19520,25330,20788,24279,22006,23170,23170,22006,24279,20788,25330,19520,26320,18205,27246,16846,28106,15447,28899,14010,29622,12540,30274,11039,30853,9512,31357,7962,31786,6393,32138,4808,32413,3212,32610,1608,32729,32758,804,32729,1608,32679,2411,32610,3212,32522,4011,32413,4808,32286,5602,32138,6393,31972,7180,31786,7962,31581,8740,31357,9512,31114,10279,30853,11039,30572,11793,30274,12540,29957,13279,29622,14010,29269,14733,28899,15447,28511,16151,28106,16846,27684,17531,27246,18205,26791,18868,26320,19520,25833,20160,25330,20788,24812,21403,24279,22006,23732,22595,23170,23170,22595,23732,22006,24279,21403,24812,20788,25330,20160,25833,19520,26320,18868,26791,18205,27246,17531,27684,16846,28106,16151,28511,15447,28899,14733,29269,14010,29622,13279,29957,12540,30274,11793,30572,11039,30853,10279,31114,9512,31357,8740,31581,7962,31786,7180,31972,6393,32138,5602,32286,4808,32413,4011,32522,3212,32610,2411,32679,1608,32729,804,32758
#elif (FHT_SAMPLES_N ==  128)
    30274,12540,23170,23170,12540,30274,32138,6393,30274,12540,27246,18205,23170,23170,18205,27246,12540,30274,6393,32138,32610,3212,32138,6393,31357,9512,30274,12540,28899,15447,27246,18205,25330,20788,23170,23170,20788,25330,18205,27246,15447,28899,12540,30274,9512,31357,6393,32138,3212,32610,32729,1608,32610,3212,32413,4808,32138,6393,31786,7962,31357,9512,30853,11039,30274,12540,29622,14010,28899,15447,28106,16846,27246,18205,26320,19520,25330,20788,24279,22006,23170,23170,22006,24279,20788,25330,19520,26320,18205,27246,16846,28106,15447,28899,14010,29622,12540,30274,11039,30853,9512,31357,7962,31786,6393,32138,4808,32413,3212,32610,1608,32729
#elif (FHT_SAMPLES_N ==  64)
    30274,12540,23170,23170,12540,30274,32138,6393,30274,12540,27246,18205,23170,23170,18205,27246,12540,30274,6393,32138,32610,3212,32138,6393,31357,9512,30274,12540,28899,15447,27246,18205,25330,20788,23170,23170,20788,25330,18205,27246,15447,28899,12540,30274,9512,31357,6393,32138,3212,32610
#elif (FHT_SAMPLES_N ==  32)
    30274,12540,23170,23170,12540,30274,32138,6393,30274,12540,27246,18205,23170,23170,18205,27246,12540,30274,6393,32138
#elif (FHT_SAMPLES_N ==  16)
    30274,12540,23170,23170,12540,30274
#endif
};

#include "fht_transform.h"

#endif //AVR_FHT_H